import { DynamicModule, Module } from '@nestjs/common';
import { HEALTH_CHECKS_PROVIDER } from 'core/health-checks';
import { <%= className %>PrismaClientConnectionHealthIndicator } from './<%= fileName %>-prisma-client-connection.health';
import {
  <%= className %>PrismaClientConfig,
  <%= constantName %>_PRISMA_CLIENT_CONFIG,
} from './<%= fileName %>-prisma-client.config';
import { <%= className %>PrismaClientService } from './<%= fileName %>-prisma-client.service';

@Module({})
export class <%= className %>PrismaClientModule {
  static forRoot(config: <%= className %>PrismaClientConfig): DynamicModule {
    return {
      module: <%= className %>PrismaClientModule,
      providers: [
        <%= className %>PrismaClientService.instance
            ? {
                provide: <%= className %>PrismaClientService,
                useValue: <%= className %>PrismaClientService.instance,
              }
            : {
                provide: <%= className %>PrismaClientService,
                useClass: <%= className %>PrismaClientService,
              },
        {
          provide: <%= constantName %>_PRISMA_CLIENT_CONFIG,
          useValue: {
            ...config,
            databaseUrl: config.databaseUrl,
          },
        },
        {
          provide: HEALTH_CHECKS_PROVIDER,
          useClass: <%= className %>PrismaClientConnectionHealthIndicator,
        },
      ],
    };
  }
}
