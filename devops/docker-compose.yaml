version: "3.7"

networks:
  nx-network:
    ipam:
      config:
        - subnet: 172.6.0.0/16

volumes:
  letsencrypt:

services:
  nx-api:
    image: nx/api:master
    container_name: nx-api
    networks:
      - nx-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.nxapi.rule=Host(`api.docker.localhost`)
      - traefik.http.routers.nxapi.entrypoints=https
      - traefik.http.routers.nxapi.tls=true
      - traefik.http.routers.nxapi.tls.certresolver=letsEncrypt
    ports:
      - 3000:3000
    
  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    networks:
      - nx-network
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"

  reverse-proxy:
    image: traefik:v2.9
    networks:
      - nx-network
    security_opt:
      - no-new-privileges:true
    labels:
      - traefik.enable=true"
      - traefik.http.routers.traefik.entrypoints=https
      - traefik.http.routers.traefik.rule=Host(`traefik.example.com`)
      - traefik.http.routers.traefik.tls=true
      - traefik.http.routers.traefik.tls.certresolver=letsEncrypt
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.services.traefik-traefik.loadbalancer.server.port=888
      - traefik.http.middlewares.traefik-auth.basicauth.users=admin:$$apr1$$ZpxLMtGz$$DHvP2pHQl4PMYrtJ1whjT0
      - traefik.http.routers.traefik.middlewares=traefik-auth
    ports:
      - "81:80"
      - "444:443"
      - "8080:8080"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yaml:/traefik.yaml:ro
      - ./traefik/acme.json:/acme.json
 